upstream _varnish
{
  server 127.0.0.1:6081;
  keepalive 5;
}

server {
  server_name .shrikeh.net;
  listen 107.170.121.143:80;
  return 301 https://shrikeh.net$request_uri;
}

server {
  server_name www.shrikeh.net;
  include /var/www/shrikeh.net/conf/ssl.conf;
  return 301 https://shrikeh.net$request_uri;  
  
  ssl_stapling_verify on;
  resolver 8.8.4.4 8.8.8.8 valid=300s;
  resolver_timeout 10s;

  ssl_certificate /usr/local/nginx/ssl/shrikeh.net.wildcard.crt;
  ssl_certificate_key /usr/local/nginx/ssl/shrikeh.net.key; 
  ssl_trusted_certificate /usr/local/nginx/ssl/startssl.pem;
}

server {
  length_hiding on;
  server_name shrikeh.net api.shrikeh.net foo.shrikeh.net;
  include /var/www/shrikeh.net/conf/ssl.conf;
  root /var/www/shrikeh.net/web;
  index index.php;
  fastcgi_keep_conn on;

  pagespeed RespectVary on;
  pagespeed XHeaderValue "Shrikeh.net frontend";
  pagespeed EnableFilters extend_cache;
  pagespeed LoadFromFile "https://shrikeh.net" "/var/www/shrikeh.net/web";
  pagespeed EnableFilters combine_css;

  pagespeed EnableFilters inline_images;
  pagespeed EnableFilters inline_preview_images;
  pagespeed EnableFilters lazyload_images;
  pagespeed LazyloadImagesAfterOnload on;
  pagespeed EnableFilters resize_mobile_images;
  pagespeed EnableFilters convert_jpeg_to_progressive;
  pagespeed EnableFilters recompress_jpeg;
  pagespeed EnableFilters recompress_png;
  pagespeed EnableFilters rewrite_style_attributes_with_url;
  pagespeed EnableFilters convert_gif_to_png;
  pagespeed EnableFilters strip_image_meta_data;
  pagespeed EnableFilters jpeg_subsampling;
  pagespeed EnableFilters convert_jpeg_to_webp;
  pagespeed EnableFilters convert_to_webp_lossless;
  pagespeed EnableFilters resize_rendered_image_dimensions;

  pagespeed EnableFilters inline_google_font_css;

  proxy_hide_header x-page-speed;
  proxy_hide_header x-xss-protection;
  proxy_hide_header x-frame-options;
  proxy_hide_header x-content-options;
  proxy_hide_header x-varnish;

  ssl_certificate /usr/local/nginx/ssl/shrikeh.net.wildcard.crt;
  ssl_certificate_key /usr/local/nginx/ssl/shrikeh.net.key;

  limit_conn arbeit 32;

  ssl_stapling_verify on;
  resolver 8.8.4.4 8.8.8.8 valid=300s;
  resolver_timeout 10s;

  ssl_trusted_certificate /usr/local/nginx/ssl/startssl.pem;

  ## See the blacklist.conf file at the parent dir: /etc/nginx.
  ## Deny access based on the User-Agent header.
  if ($bad_bot) {
    return 444;
  }
  ## Deny access based on the Referer header.
  if ($bad_referer) {
    return 444;
  }

  ## Protection against illegal HTTP methods. Out of the box only HEAD,
  ## GET and POST are allowed.
  if ($not_allowed_method) {
    return 405;
  }

  location / {
    location ~* ^.+\.(html|php)$ {
      proxy_pass http://_varnish;
      proxy_cache            shrikeh;
      proxy_cache_valid  200 302  5s;
      proxy_cache_valid  404      10s;
      proxy_cache_use_stale  error timeout invalid_header updating
      http_500 http_502 http_503 http_504;

      include /var/www/shrikeh.net/conf/headers.conf;
    }

    location ~ /\. {
      deny all;
    }

   location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
     expires max;
     try_files $uri @backend;
   }

    location ~* ^.+\.(css|cur|js|jpe?g|gif|htc|ico|png|xml|otf|ttf|eot|woff|svg)$ {
      access_log off;
      expires max;
      try_files $uri @backend;
      ## No need to bleed constant updates. Send the all shebang in one
      ## fell swoop.
      tcp_nodelay off;
      ## Set the OS file cache.
      open_file_cache max=3000 inactive=120s;
      open_file_cache_valid 45s;
      open_file_cache_min_uses 2;
      open_file_cache_errors off;
    }
    try_files $uri @backend;
  }


  location @backend {
    proxy_pass http://_varnish;
#    proxy_cache            shrikeh;
#    proxy_cache_valid  200 302  5s;
#    proxy_cache_valid  404      10s;
#    proxy_cache_use_stale  error timeout invalid_header updating
#    http_500 http_502 http_503 http_504;
  }
}
